<Application x:Class="NexusApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:NexusApp"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/LightTheme.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="CardStyle" TargetType="Border">
                <Setter Property="Background" Value="{DynamicResource Color.Card.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Color.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="Padding" Value="16"/>
            </Style>

            <Style x:Key="PrimaryButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="#0EA5E9"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="16,8"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="8" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#0284C7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource PrimaryButtonStyle}">
                <Setter Property="Background" Value="{DynamicResource Color.Card.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Color.Text.Primary}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Color.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Color.Background}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="TaskItemStyle" TargetType="Border">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="2"/>
                <Setter Property="CornerRadius" Value="8"/>
                <Setter Property="Padding" Value="12"/>
                <Setter Property="Margin" Value="0,2,0,2"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource Color.Background}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ActiveTaskItemStyle" TargetType="Border" BasedOn="{StaticResource TaskItemStyle}">
                <Setter Property="Background" Value="{DynamicResource Color.Accent.Blue.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Color.Accent.Blue.Border}"/>
            </Style>
            <Style x:Key="StatusBadgeStyle" TargetType="Border">
                <Setter Property="CornerRadius" Value="12"/>
                <Setter Property="Padding" Value="8,2,8,2"/>
                <Setter Property="HorizontalAlignment" Value="Right"/>
                <Setter Property="MinWidth" Value="80"/>
            </Style>

            <Style x:Key="InputBoxStyle" TargetType="Control">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Color.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Color.Text.Primary}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="8,5"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Control">
                            <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource Color.Accent.Blue.Border}" TargetName="border"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" Value="{DynamicResource Color.Accent.Blue.Border}" TargetName="border"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBox" BasedOn="{StaticResource InputBoxStyle}"/>
            <Style TargetType="PasswordBox" BasedOn="{StaticResource InputBoxStyle}"/>
            <Style TargetType="ComboBox" BasedOn="{StaticResource InputBoxStyle}"/>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource Color.Text.Primary}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Color.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="4,0,0,0"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="4" Width="16" Height="16">
                                    <Path x:Name="checkMark" Data="M 0 5 L 5 10 L 12 0" Stroke="{DynamicResource Color.Accent.Blue.Text}" StrokeThickness="2" Visibility="Collapsed"/>
                                </Border>
                                <ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                                    <Setter TargetName="checkBoxBorder" Property="Background" Value="{DynamicResource Color.Accent.Blue.Background}"/>
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource Color.Accent.Blue.Border}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="checkBoxBorder" Property="BorderBrush" Value="{DynamicResource Color.Accent.Blue.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
